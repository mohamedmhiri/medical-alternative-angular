{"version":3,"sources":["dimmer.ts"],"names":[],"mappings":"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","file":"dimmer.js","sourceRoot":"","sourcesContent":["import {Component, Input, Output, HostBinding, HostListener, EventEmitter, Renderer, ElementRef, ChangeDetectorRef} from '@angular/core';\r\nimport {SuiTransition, Transition, TransitionDirection} from '../transition/transition';\r\nimport {TransitionController} from '../transition/transition-controller';\nexport class SuiDimmer extends SuiTransition {\nprivate _dimmerClasses:boolean;\nprivate _transitionController:TransitionController;\nprivate _isDimmed:boolean;\n/**\n * @return {?}\n */\npublic get isDimmed() {\r\n        return this._isDimmed;\r\n    }\n/**\n * @param {?} dimmed\n * @return {?}\n */\npublic set isDimmed(dimmed:boolean) {\r\n        dimmed = !!dimmed;\r\n\r\n        if (!this._transitionController) {\r\n            // Initialise transition functionality when first setting dimmed, to ensure initial state doesn't transition.\r\n            this._transitionController = new TransitionController(dimmed, \"block\");\r\n\r\n            this.setTransitionController(this._transitionController);\r\n        }\r\n\r\n        if (this._isDimmed != dimmed) {\r\n            this._isDimmed = dimmed;\r\n\r\n            if (this._transitionController.isVisible != dimmed) {\r\n                this._transitionController.stopAll();\r\n                this._transitionController.animate(new Transition(\"fade\", 300, dimmed ? TransitionDirection.In : TransitionDirection.Out));\r\n            }\r\n        }\r\n    }\npublic isDimmedChange:EventEmitter<boolean>;\npublic isClickable:boolean;\npublic transition:string;\npublic transitionDuration:number;\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} changeDetector\n */\nconstructor(renderer:Renderer, element:ElementRef, changeDetector:ChangeDetectorRef) {\r\n        super(renderer, element, changeDetector);\r\n\r\n        this._isDimmed = false;\r\n        this.isDimmedChange = new EventEmitter<boolean>();\r\n        this.isClickable = true;\r\n\r\n        this._dimmerClasses = true;\r\n    }\n/**\n * @return {?}\n */\nprivate onClick() {\r\n        if (this.isClickable) {\r\n            this.isDimmed = false;\r\n            this.isDimmedChange.emit(this.isDimmed);\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'sui-dimmer',\r\n    exportAs: 'suiDimmer',\r\n    template: `\r\n<div class=\"content\">\r\n    <div class=\"center\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n`,\r\n    styles: [`\r\n:host.dimmer {\r\n    transition: none;\r\n}\r\n`]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_dimmerClasses': [{ type: HostBinding, args: ['class.ui', ] },{ type: HostBinding, args: ['class.dimmer', ] },],\n'isDimmed': [{ type: HostBinding, args: ['class.active', ] },{ type: Input },],\n'isDimmedChange': [{ type: Output },],\n'isClickable': [{ type: Input },],\n'transition': [{ type: Input },],\n'transitionDuration': [{ type: Input },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction SuiDimmer_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiDimmer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiDimmer.ctorParameters;\n/** @type {?} */\nSuiDimmer.propDecorators;\n/** @type {?} */\nSuiDimmer.prototype._dimmerClasses;\n/** @type {?} */\nSuiDimmer.prototype._transitionController;\n/** @type {?} */\nSuiDimmer.prototype._isDimmed;\n/** @type {?} */\nSuiDimmer.prototype.isDimmedChange;\n/** @type {?} */\nSuiDimmer.prototype.isClickable;\n/** @type {?} */\nSuiDimmer.prototype.transition;\n/** @type {?} */\nSuiDimmer.prototype.transitionDuration;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}