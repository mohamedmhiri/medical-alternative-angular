{"version":3,"sources":["dropdown-menu.ts"],"names":[],"mappings":"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","file":"dropdown-menu.js","sourceRoot":"","sourcesContent":["import {Directive, HostBinding, ContentChild, forwardRef, Renderer, ElementRef, AfterContentInit, ContentChildren, QueryList, Input, HostListener, ChangeDetectorRef} from '@angular/core';\r\nimport {SuiTransition, Transition} from '../transition/transition';\r\nimport {DropdownService, DropdownAutoCloseType} from './dropdown.service';\r\nimport {TransitionController} from '../transition/transition-controller';\r\nimport {KeyCode, AugmentedElement, HandledMouseEvent} from '../util/util';\r\n// Polyfill for IE\r\n\nimport'element-closest';\nexport class SuiDropdownMenuItem {\n/**\n * @return {?}\n */\npublic get isDisabled() {\r\n        // We must use nativeElement as Angular doesn't have a way of reading class information.\r\n        const /** @type {?} */ element = /** @type {?} */(( this.element.nativeElement as Element));\r\n        return element.classList.contains(\"disabled\");\r\n    }\nprivate _isSelected:boolean;\n/**\n * @return {?}\n */\npublic get isSelected() {\r\n        return this._isSelected;\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set isSelected(value:boolean) {\r\n        // Renderer is used to enable a dynamic class name.\r\n        this._renderer.setElementClass(this.element.nativeElement, this.selectedClass, value)\r\n    }\npublic selectedClass:string;\npublic childDropdownMenu:SuiDropdownMenu;\n/**\n * @return {?}\n */\npublic get hasChildDropdown() {\r\n        return !!this.childDropdownMenu;\r\n    }\n/**\n * @param {?} _renderer\n * @param {?} element\n */\nconstructor(private _renderer:Renderer,\npublic element:ElementRef) {\r\n        this.isSelected = false;\r\n\r\n        this.selectedClass = \"selected\";\r\n    }\n/**\n * @return {?}\n */\npublic performClick() {\r\n        // Manually click the element. Done via renderer so as to avoid nativeElement changes directly.\r\n        this._renderer.invokeElementMethod(this.element.nativeElement, \"click\");\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    // We must attach to every '.item' as Angular doesn't support > selectors.\r\n    selector: '.item'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'childDropdownMenu': [{ type: ContentChild, args: [forwardRef(() => SuiDropdownMenu), ] },],\n};\n}\n\nfunction SuiDropdownMenuItem_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiDropdownMenuItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiDropdownMenuItem.ctorParameters;\n/** @type {?} */\nSuiDropdownMenuItem.propDecorators;\n/** @type {?} */\nSuiDropdownMenuItem.prototype._isSelected;\n/** @type {?} */\nSuiDropdownMenuItem.prototype.selectedClass;\n/** @type {?} */\nSuiDropdownMenuItem.prototype.childDropdownMenu;\n/** @type {?} */\nSuiDropdownMenuItem.prototype._renderer;\n/** @type {?} */\nSuiDropdownMenuItem.prototype.element;\n}\n\nexport class SuiDropdownMenu extends SuiTransition implements AfterContentInit {\nprivate _service:DropdownService;\nprivate _transitionController:TransitionController;\npublic menuTransition:string;\npublic menuTransitionDuration:number;\n/**\n * @return {?}\n */\npublic get service() {\r\n        return this._service;\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set service(value:DropdownService) {\r\n        this._service = value;\r\n\r\n        let /** @type {?} */ previousIsOpen = this._service.isOpen;\r\n        this._service.isOpenChange.subscribe((isOpen:boolean) => {\r\n            if (isOpen != previousIsOpen) {\r\n                // Only run transitions if the open state has changed.\r\n                this._transitionController.stopAll();\r\n                this._transitionController.animate(new Transition(this.menuTransition, this.menuTransitionDuration));\r\n            }\r\n\r\n            if (!isOpen) {\r\n                // Reset the item selections when a nested item is selected to avoid incosistent open states.\r\n                if (this.selectedItems.length > 1) {\r\n                    this.resetSelection();\r\n                }\r\n            }\r\n\r\n            previousIsOpen = isOpen;\r\n        });\r\n    }\nprivate _itemsQueryInternal:QueryList<SuiDropdownMenuItem>;\nprivate _itemsQueryOverride:QueryList<SuiDropdownMenuItem>;\n/**\n * @param {?} items\n * @return {?}\n */\npublic set items(items:QueryList<SuiDropdownMenuItem>) {\r\n        this._itemsQueryOverride = items;\r\n    }\n/**\n * @return {?}\n */\nprivate get _itemsQuery() {\r\n        return this._itemsQueryOverride || this._itemsQueryInternal;\r\n    }\n/**\n * @return {?}\n */\nprivate get _items() {\r\n        return this._itemsQuery.filter(i => !i.isDisabled);\r\n    }\npublic selectedItems:SuiDropdownMenuItem[];\npublic menuAutoSelectFirst:boolean;\npublic menuSelectedItemClass:string;\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} changeDetector\n */\nconstructor(renderer:Renderer,\npublic element:ElementRef, changeDetector:ChangeDetectorRef) {\r\n        super(renderer, element, changeDetector);\r\n\r\n        // Initialise transition functionality.\r\n        this._transitionController = new TransitionController(false);\r\n        this.setTransitionController(this._transitionController);\r\n\r\n        this.menuTransition = \"slide down\";\r\n        this.menuTransitionDuration = 200;\r\n\r\n        this.menuAutoSelectFirst = false;\r\n        this.menuSelectedItemClass = \"selected\";\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\npublic onClick(e:HandledMouseEvent) {\r\n        if (!e.eventHandled) {\r\n            e.eventHandled = true;\r\n\r\n            if (this._service.autoCloseMode == DropdownAutoCloseType.ItemClick) {\r\n                const /** @type {?} */ target = /** @type {?} */(( e.target as AugmentedElement));\r\n                if (this.element.nativeElement.contains(target.closest(\".item\")) && !/input|textarea/i.test(target.tagName)) {\r\n                    // Once an item is selected, we can close the entire dropdown.\r\n                    this._service.setOpenState(false, true);\r\n                }\r\n            }\r\n        }\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\npublic onDocumentKeydown(e:KeyboardEvent) {\r\n        // Only the root dropdown (i.e. not nested dropdowns) is responsible for keeping track of the currently selected item.\r\n        if (this._service.isOpen && !this._service.isNested) {\r\n            // Stop document events like scrolling while open.\r\n            const /** @type {?} */ target = /** @type {?} */(( e.target as Element));\r\n            if (!/input/i.test(target.tagName) || e.keyCode == KeyCode.Enter) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            // Gets the top selected item from the stack.\r\n            let [selected] = this.selectedItems.slice(-1);\r\n            // Keeping track of the menu containing the currently selected element allows us to easily determine its siblings.\r\n            let /** @type {?} */ selectedContainer:SuiDropdownMenu = this;\r\n            if (this.selectedItems.length >= 2) {\r\n                const [selectedParent] = this.selectedItems.slice(-2);\r\n                selectedContainer = selectedParent.childDropdownMenu;\r\n            }\r\n\r\n            switch (e.keyCode) {\r\n                // Escape : close the entire dropdown.\r\n                case KeyCode.Escape:\r\n                    this._service.setOpenState(false);\r\n                    break;\r\n                // Down : select the next item below the current one, or the 1st if none selected.\r\n                case KeyCode.Down:\r\n                // Up : select the next item above the current one, or the 1st if none selected.\r\n                case KeyCode.Up:\r\n                    this.selectedItems.pop();\r\n                    this.selectedItems.push(selectedContainer.updateSelection(selected, e.keyCode));\r\n                    // Prevent default regardless of whether we are in an input, to stop jumping to the start or end of the query string.\r\n                    e.preventDefault();\r\n                    break;\r\n                // Enter : if the item doesn't contain a nested dropdown, 'click' it. Otherwise, fall through to 'Right' action.\r\n                case KeyCode.Enter:\r\n                    if (selected && !selected.hasChildDropdown) {\r\n                        selected.performClick();\r\n                        break;\r\n                    }\r\n                // Right : if the selected item contains a nested dropdown, open the dropdown & select the 1st item.\r\n                case KeyCode.Right:\r\n                    if (selected && selected.hasChildDropdown) {\r\n                        selected.childDropdownMenu.service.setOpenState(true);\r\n\r\n                        this.selectedItems.push(selected.childDropdownMenu.updateSelection(selected, e.keyCode));\r\n                    }\r\n                    break;\r\n                // Left : if the selected item is in a nested dropdown, close it and select the containing item.\r\n                case KeyCode.Left:\r\n                    if (this.selectedItems.length >= 2) {\r\n                        this.selectedItems.pop();\r\n                        const [selectedParent] = this.selectedItems.slice(-1);\r\n\r\n                        selectedParent.childDropdownMenu.service.setOpenState(false);\r\n                        selectedParent.isSelected = true;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\n/**\n * @return {?}\n */\npublic resetSelection() {\r\n        this.selectedItems = [];\r\n        this._items.forEach(i => {\r\n            i.selectedClass = this.menuSelectedItemClass;\r\n            i.isSelected = false;\r\n        });\r\n\r\n        if (this.menuAutoSelectFirst && this._items.length > 0) {\r\n            // Autoselect 1st item if required & possible.\r\n            this._items[0].isSelected = true;\r\n            this.scrollToItem(this._items[0]);\r\n            this.selectedItems.push(this._itemsQuery.first);\r\n        }\r\n    }\n/**\n * @param {?} selectedItem\n * @param {?} keyCode\n * @return {?}\n */\npublic updateSelection(selectedItem:SuiDropdownMenuItem, keyCode:KeyCode) {\r\n        if (selectedItem) {\r\n            // Remove the selected status on the previously selected item.\r\n            selectedItem.isSelected = false;\r\n        }\r\n\r\n        let /** @type {?} */ selectedIndex = this._items\r\n            .findIndex(i => i === selectedItem);\r\n\r\n        let /** @type {?} */ newSelection:SuiDropdownMenuItem;\r\n\r\n        switch (keyCode) {\r\n            case KeyCode.Enter:\r\n            case KeyCode.Right:\r\n            case KeyCode.Down:\r\n                selectedIndex += 1;\r\n                break;\r\n            case KeyCode.Up:\r\n                if (selectedIndex == -1) {\r\n                    // If none are selected, select the 1st item. Should this be `this.items.last - 1`?\r\n                    selectedIndex = 0;\r\n                    break;\r\n                }\r\n\r\n                selectedIndex -= 1;\r\n                break;\r\n        }\r\n\r\n        // Select the item at the updated index. The || is to stop us selecting past the start or end of the item list.\r\n        newSelection = this._items[selectedIndex] || selectedItem;\r\n\r\n        if (newSelection) {\r\n            // Set the selected status on the newly selected item.\r\n            newSelection.isSelected = true;\r\n        }\r\n\r\n        this.scrollToItem(newSelection);\r\n\r\n        return newSelection;\r\n    }\n/**\n * @param {?} item\n * @return {?}\n */\npublic scrollToItem(item:SuiDropdownMenuItem) {\r\n        const /** @type {?} */ menu:Element = this.element.nativeElement;\r\n        const /** @type {?} */ selectedRect:ClientRect = item.element.nativeElement.getBoundingClientRect();\r\n\r\n        const /** @type {?} */ menuRect = menu.getBoundingClientRect();\r\n        \r\n        let /** @type {?} */ scrollAmount = 0;\r\n\r\n        if (selectedRect.bottom > menuRect.bottom) {\r\n            scrollAmount = selectedRect.bottom - menuRect.bottom;\r\n        }\r\n\r\n        if (selectedRect.top < menuRect.top) {\r\n            scrollAmount = selectedRect.top - menuRect.top;\r\n        }\r\n\r\n        menu.scrollTop += Math.round(scrollAmount);\r\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentInit() {\r\n        this.onItemsChanged();\r\n        this._itemsQuery.changes.subscribe(() => this.onItemsChanged());\r\n    }\n/**\n * @return {?}\n */\nprivate onItemsChanged() {\r\n        // We use `_items` rather than `items` in case one or more have become disabled.\r\n        this.resetSelection();\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[suiDropdownMenu]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuTransition': [{ type: Input },],\n'menuTransitionDuration': [{ type: Input },],\n'_itemsQueryInternal': [{ type: ContentChildren, args: [SuiDropdownMenuItem, ] },],\n'menuAutoSelectFirst': [{ type: Input },],\n'menuSelectedItemClass': [{ type: Input },],\n'onClick': [{ type: HostListener, args: [\"click\", [\"$event\"], ] },],\n'onDocumentKeydown': [{ type: HostListener, args: [\"document:keydown\", [\"$event\"], ] },],\n};\n}\n\nfunction SuiDropdownMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiDropdownMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiDropdownMenu.ctorParameters;\n/** @type {?} */\nSuiDropdownMenu.propDecorators;\n/** @type {?} */\nSuiDropdownMenu.prototype._service;\n/** @type {?} */\nSuiDropdownMenu.prototype._transitionController;\n/** @type {?} */\nSuiDropdownMenu.prototype.menuTransition;\n/** @type {?} */\nSuiDropdownMenu.prototype.menuTransitionDuration;\n/** @type {?} */\nSuiDropdownMenu.prototype._itemsQueryInternal;\n/** @type {?} */\nSuiDropdownMenu.prototype._itemsQueryOverride;\n/** @type {?} */\nSuiDropdownMenu.prototype.selectedItems;\n/** @type {?} */\nSuiDropdownMenu.prototype.menuAutoSelectFirst;\n/** @type {?} */\nSuiDropdownMenu.prototype.menuSelectedItemClass;\n/** @type {?} */\nSuiDropdownMenu.prototype.element;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}