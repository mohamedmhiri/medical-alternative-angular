{"version":3,"sources":["dropdown.service.ts"],"names":[],"mappings":"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","file":"dropdown.service.js","sourceRoot":"","sourcesContent":["import {EventEmitter} from '@angular/core';\r\n\r\nexport type DropdownAutoCloseType = \"itemClick\" | \"outsideClick\" | \"disabled\";\r\n\r\n// Creates essentially a 'string' enum.\r\nexport const /** @type {?} */ DropdownAutoCloseType = {\r\n    ItemClick: /** @type {?} */(( \"itemClick\" as DropdownAutoCloseType)),\r\n    OutsideClick: /** @type {?} */(( \"outsideClick\" as DropdownAutoCloseType)),\r\n    Disabled: /** @type {?} */(( \"disabled\" as DropdownAutoCloseType))\r\n}\nexport class DropdownService {\npublic isOpen:boolean;\npublic isOpenChange:EventEmitter<boolean>;\npublic isDisabled:boolean;\npublic autoCloseMode:DropdownAutoCloseType;\npublic parent:DropdownService;\npublic children:DropdownService[];\n/**\n * @return {?}\n */\npublic get isNested() {\r\n        return !!this.parent;\r\n    }\n/**\n * @param {?=} autoCloseMode\n */\nconstructor(autoCloseMode:DropdownAutoCloseType = DropdownAutoCloseType.ItemClick) {\r\n        this.isOpen = false;\r\n        this.isOpenChange = new EventEmitter<boolean>();\r\n\r\n        this.isDisabled = false;\r\n\r\n        this.autoCloseMode = autoCloseMode;\r\n\r\n        this.children = [];\r\n    }\n/**\n * @param {?} isOpen\n * @param {?=} reflectInParent\n * @return {?}\n */\npublic setOpenState(isOpen:boolean, reflectInParent:boolean = false) {\r\n        if (this.isOpen != isOpen && !this.isDisabled) {\r\n            // Only update the state if it has changed, and the dropdown isn't disabled.\r\n            this.isOpen = !!isOpen;\r\n            // We must delay the emitting to avoid the 'changed after checked' Angular errors.\r\n            this.delay(() => this.isOpenChange.emit(this.isOpen));\r\n\r\n            if (!this.isOpen) {\r\n                // Close the child dropdowns when this one closes.\r\n                this.children.forEach(c => c.setOpenState(this.isOpen));\r\n            }\r\n\r\n            if (this.parent && reflectInParent) {\r\n                // Open the parent dropdowns when this one opens.\r\n                this.parent.setOpenState(this.isOpen, true);\r\n            }\r\n        }\r\n        else if (this.isOpen != isOpen && this.isDisabled) {\r\n            // If the state has changed, but the dropdown is disabled, re-emit the original isOpen value.\r\n            this.delay(() => this.isOpenChange.emit(this.isOpen));\r\n        }\r\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\npublic setDisabledState(isDisabled:boolean) {\r\n        if (this.isDisabled != isDisabled) {\r\n            if (!!isDisabled) {\r\n                // Close the dropdown as it is now disabled\r\n                this.setOpenState(false);\r\n            }\r\n\r\n            this.isDisabled = !!isDisabled;\r\n        }\r\n    }\n/**\n * @return {?}\n */\npublic toggleOpenState() {\r\n        this.setOpenState(!this.isOpen);\r\n    }\n/**\n * @param {?} child\n * @return {?}\n */\npublic registerChild(child:DropdownService) {\r\n        if (!this.isChildRegistered(child)) {\r\n            this.children.push(child);\r\n            child.parent = this;\r\n        }\r\n    }\n/**\n * @param {?} child\n * @return {?}\n */\npublic isChildRegistered(child:DropdownService):boolean {\r\n        return this === child || !!this.children\r\n            .find(c => !!c.children\r\n                .find(c => c.isChildRegistered(child)));\r\n    }\n/**\n * @return {?}\n */\npublic clearChildren() {\r\n        this.children.forEach(c => {\r\n            c.parent = null;\r\n        });\r\n        this.children = [];\r\n    }\n/**\n * @param {?} callback\n * @return {?}\n */\nprivate delay(callback:() => void) {\r\n        setTimeout(() => callback());\r\n    }\r\n}\n\nfunction DropdownService_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownService.prototype.isOpen;\n/** @type {?} */\nDropdownService.prototype.isOpenChange;\n/** @type {?} */\nDropdownService.prototype.isDisabled;\n/** @type {?} */\nDropdownService.prototype.autoCloseMode;\n/** @type {?} */\nDropdownService.prototype.parent;\n/** @type {?} */\nDropdownService.prototype.children;\n}\n"]}