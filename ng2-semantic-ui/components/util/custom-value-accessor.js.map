{"version":3,"sources":["custom-value-accessor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,iBAAE,EAAuC,MAAA,gBAAA,CAAA;AAChD,OAAO,EAAA,UAAE,EAAgC,MAAA,eAAA,CAAA;AAKzC;IAGA;;OAEG;IACH,6BADwB,KAAO;QAAP,UAAA,GAAA,KAAA,CAAO;QAHpB,aAAA,GAAW,cAAM,CAAA,CAAG;QACpB,cAAA,GAAY,cAAM,CAAA,CAAG;IAEA,CAAA;IAEhC;;;OAGG;IAHE,wCAAA,GAIL,UAJK,KAAA;QAKG,IAAI,CAJC,KAAC,CAAK,UAAC,CAAU,KAAC,CAAK,CAAC;IAKjC,CAAC;IACL;;;OAGG;IANE,8CAAA,GAOL,UAPK,EAAA;QAQG,IAAI,CAPC,QAAC,GAAU,EAAA,CAAG;IAQvB,CAAC;IACL;;;OAGG;IATE,+CAAA,GAUL,UAVK,EAAA;QAWG,IAAI,CAVC,SAAC,GAAW,EAAA,CAAG;IAWxB,CAAC;IACL,0BAAC;AAAD,CA5BA,AA4BC,IAAA;;AAED;IACA,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACvC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC;IACxC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC;AACpC,CAAC;AAED;;;GAGG;AACH,MAvBC,qCAAA,IAAA;IAwBG,MAAM,CAvBC;QAwBH,OAAO,EAvBE,iBAAA;QAwBT,WAAW,EAvBE,UAAA,CAAW,cAAM,OAAA,IAAA,EAAA,CAAA,CAAK;QAwBnC,KAAK,EAvBE,IAAA;KAwBV,CAvBC;AAwBN,CAAC","file":"custom-value-accessor.js","sourceRoot":"","sourcesContent":["import {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\nimport {forwardRef, InjectionToken, Type} from '@angular/core';\r\n\r\nexport interface CustomValueAccessorHost<T> {\r\n    writeValue(value:T):void;\r\n}\nexport class CustomValueAccessor<U, T extends CustomValueAccessorHost<U>> implements ControlValueAccessor {\npublic onChange = () => {};\npublic onTouched = () => {};\n/**\n * @param {?} _host\n */\nconstructor(private _host:T) {}\n/**\n * @param {?} value\n * @return {?}\n */\npublic writeValue(value:U) {\r\n        this._host.writeValue(value);\r\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnChange(fn:() => void) {\r\n        this.onChange = fn;\r\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnTouched(fn:() => void) {\r\n        this.onTouched = fn;\r\n    }\r\n}\n\nfunction CustomValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nCustomValueAccessor.prototype.onChange;\n/** @type {?} */\nCustomValueAccessor.prototype.onTouched;\n/** @type {?} */\nCustomValueAccessor.prototype._host;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nexport function customValueAccessorFactory(type:Function) {\r\n    return {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => type),\r\n        multi: true\r\n    };\r\n}"]}