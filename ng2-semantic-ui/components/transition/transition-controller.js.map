{"version":3,"sources":["transition-controller.ts"],"names":[],"mappings":"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","file":"transition-controller.js","sourceRoot":"","sourcesContent":["import {Renderer, ElementRef, ChangeDetectorRef} from '@angular/core';\r\nimport {Transition, TransitionDirection} from './transition';\nexport class TransitionController {\nprivate _renderer:Renderer;\nprivate _element:ElementRef;\nprivate _changeDetector:ChangeDetectorRef;\n/**\n * @return {?}\n */\nprivate get _isReady() {\r\n        return this._renderer != null && this._element != null;\r\n    }\nprivate _display:string;\nprivate _queue:Transition[];\nprivate _isAnimating:boolean;\n/**\n * @return {?}\n */\npublic get isAnimating() {\r\n        return this._isAnimating;\r\n    }\nprivate _isVisible:boolean;\n/**\n * @return {?}\n */\npublic get isVisible() {\r\n        return this._isVisible;\r\n    }\nprivate _isHidden:boolean;\n/**\n * @return {?}\n */\npublic get isHidden() {\r\n        return this._isHidden;\r\n    }\n/**\n * @return {?}\n */\nprivate get _queueFirst() {\r\n        return this._queue[0];\r\n    }\n/**\n * @return {?}\n */\nprivate get _queueLast() {\r\n        return this._queue[this._queue.length - 1];\r\n    }\nprivate _animationTimeout:number;\n/**\n * @param {?=} isInitiallyVisible\n * @param {?=} display\n */\nconstructor(isInitiallyVisible:boolean = true, display:string = \"block\") {\r\n        // isInitiallyVisible sets whether the element starts out visible.\r\n        this._isVisible = isInitiallyVisible;\r\n        this._isHidden = !this._isVisible;\r\n\r\n        this._display = display;\r\n        this._queue = [];\r\n\r\n        this._isAnimating = false;\r\n    }\n/**\n * @param {?} renderer\n * @return {?}\n */\npublic registerRenderer(renderer:Renderer) {\r\n        this._renderer = renderer;\r\n        this.performTransition();\r\n    }\n/**\n * @param {?} element\n * @return {?}\n */\npublic registerElement(element:ElementRef) {\r\n        this._element = element;\r\n        this.performTransition();\r\n    }\n/**\n * @param {?} changeDetector\n * @return {?}\n */\npublic registerChangeDetector(changeDetector:ChangeDetectorRef) {\r\n        this._changeDetector = changeDetector;\r\n        this.performTransition();\r\n    }\n/**\n * @param {?} transition\n * @return {?}\n */\npublic animate(transition:Transition) {\r\n        // Test if transition is one of the list that doesn't change the visible state.\r\n        // Should these eventually become classes?\r\n        let /** @type {?} */ isDirectionless = [\"jiggle\", \"flash\", \"shake\", \"pulse\", \"tada\", \"bounce\"].indexOf(transition.type) != -1;\r\n        if (isDirectionless) {\r\n            transition.direction = TransitionDirection.Static;\r\n        }\r\n        else if (transition.direction == null || transition.direction == TransitionDirection.Either) {\r\n            // Set the direction to the opposite of the current visible state automatically if not set, or set to either direction.\r\n            transition.direction = this._isVisible ? TransitionDirection.Out : TransitionDirection.In;\r\n            if (this._queueLast) {\r\n                // If there is an transition in the queue already, set the direction to the opposite of the direction of that transition.\r\n                transition.direction = this._queueLast.direction == TransitionDirection.In ? TransitionDirection.Out : TransitionDirection.In;\r\n            }\r\n        }\r\n\r\n        // Store the transition in the queue before attempting to perform it.\r\n        this._queue.push(transition);\r\n\r\n        this.performTransition();\r\n    }\n/**\n * @return {?}\n */\nprivate performTransition() {\r\n        if (!this._isReady || this._isAnimating || !this._queueFirst) {\r\n            // Don't transition until we are ready, or if we are animating, or if there aren't any transitions in the queue.\r\n            return;\r\n        }\r\n\r\n        this._isAnimating = true;\r\n\r\n        let /** @type {?} */ transition = this._queueFirst;\r\n\r\n        // Set the Semantic UI classes for transitioning.\r\n        transition.classes.forEach(c => this._renderer.setElementClass(this._element, c, true));\r\n        this._renderer.setElementClass(this._element, `animating`, true);\r\n        this._renderer.setElementClass(this._element, transition.directionClass, true);\r\n\r\n        // Set the Semantic UI styles for transitioning.\r\n        this._renderer.setElementStyle(this._element, `animationDuration`, `${transition.duration}ms`);\r\n        this._renderer.setElementStyle(this._element, `display`, this._display);\r\n\r\n        if (transition.direction == TransitionDirection.In) {\r\n            // Unset hidden if we are transitioning in.\r\n            this._isHidden = false;\r\n        }\r\n\r\n        // Wait the length of the animation before calling the complete callback.\r\n        this._animationTimeout = window.setTimeout(() => this.finishTransition(transition), transition.duration);\r\n    }\n/**\n * @param {?} transition\n * @return {?}\n */\nprivate finishTransition(transition:Transition) {\r\n        // Unset the Semantic UI classes & styles for transitioning.\r\n        transition.classes.forEach(c => this._renderer.setElementClass(this._element, c, false));\r\n        this._renderer.setElementClass(this._element, `animating`, false);\r\n        this._renderer.setElementClass(this._element, transition.directionClass, false);\r\n\r\n        this._renderer.setElementStyle(this._element, `animationDuration`, null);\r\n        this._renderer.setElementStyle(this._element, `display`, null);\r\n\r\n        if (transition.direction == TransitionDirection.In) {\r\n            // If we have just animated in, we are now visible.\r\n            this._isVisible = true;\r\n        }\r\n        else if (transition.direction == TransitionDirection.Out) {\r\n            // If we have transitioned out, we should be invisible and hidden.\r\n            this._isVisible = false;\r\n            this._isHidden = true;\r\n        }\r\n\r\n        if (transition.onComplete) {\r\n            // Call the user-defined transition callback.\r\n            transition.onComplete();\r\n        }\r\n\r\n        // Delete the transition from the queue.\r\n        this._queue.shift();\r\n        this._isAnimating = false;\r\n\r\n        this._changeDetector.markForCheck();\r\n\r\n        // Immediately attempt to perform another transition.\r\n        this.performTransition();\r\n    }\n/**\n * @param {?=} transition\n * @return {?}\n */\npublic stop(transition:Transition = this._queueFirst) {\r\n        if (!transition || !this._isAnimating) {\r\n            return;\r\n        }\r\n\r\n        clearTimeout(this._animationTimeout);\r\n        this.finishTransition(transition);\r\n    }\n/**\n * @return {?}\n */\npublic stopAll() {\r\n        this.clearQueue();\r\n        this.stop();\r\n    }\n/**\n * @return {?}\n */\npublic clearQueue() {\r\n        if (this.isAnimating) {\r\n            this._queue = [this._queueFirst];\r\n            return;\r\n        }\r\n        this._queue = [];\r\n    }\r\n}\n\nfunction TransitionController_tsickle_Closure_declarations() {\n/** @type {?} */\nTransitionController.prototype._renderer;\n/** @type {?} */\nTransitionController.prototype._element;\n/** @type {?} */\nTransitionController.prototype._changeDetector;\n/** @type {?} */\nTransitionController.prototype._display;\n/** @type {?} */\nTransitionController.prototype._queue;\n/** @type {?} */\nTransitionController.prototype._isAnimating;\n/** @type {?} */\nTransitionController.prototype._isVisible;\n/** @type {?} */\nTransitionController.prototype._isHidden;\n/** @type {?} */\nTransitionController.prototype._animationTimeout;\n}\n"]}