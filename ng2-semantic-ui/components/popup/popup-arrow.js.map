{"version":3,"sources":["popup-arrow.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAA6B,WAAA,EAAY,MAAA,eAAA,CAAA;AAE5D;IAAA;IAyGA,CAAC;IAlGD,sBAOK,oCAAA;QAVL;;WAEG;aACH;YACQ,EAAE,CAAC,CAAC,IAOC,CAAI,QAAC,CAAQ,CAAC,CAAA;gBANf,MAAM,CAOC,IAAA,CAAK,QAAC,CAAQ,SAAC,CAAS,KAAC,CAAK,GAAC,CAAG,CAAC,KAAC,EAAK,CAAE;YANtD,CAAC;QACL,CAAC;;;OAAA;IAIL,sBAKK,oCAAA;QARL;;WAEG;aACH;YACQ,EAAE,CAAC,CAAC,IAKC,CAAI,QAAC,CAAQ,CAAC,CAAA;gBAJf,IAAM,gBAAgB,CAKhB,SAAA,GAAY,IAAA,CAAK,QAAC,CAAQ,SAAC,CAAS,KAAC,CAAK,GAAC,CAAG,CAAC,GAAC,EAAG,CAAE;gBAJ3D,EAAE,CAAC,CAAC,SAKC,IAAY,IAAA,CAAK,SAAC,CAAS,CAAC,CAAA;oBAJ7B,MAAM,CAKC,QAAA,CAAS;gBAJpB,CAAC;gBACD,MAAM,CAKC,SAAA,CAAU;YAJrB,CAAC;QACL,CAAC;;;OAAA;IAkFL,oBAAC;AAAD,CAzGA,AAyGC;;AA5EM,wBAAA,GAAoC;IAJ3C,EAKE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAJrB,QAAQ,EAKE,iBAAA;gBAJV,QAAQ,EAKE,oSAAb;gBACG,MAAM,EAKE,CAAA,uyCAsDX,CAKC;aAJD,EAKC,EAAG;CAJJ,CAKC;AAJF;;GAEG;AAIF,4BAAA,GAAA,cAAA,OAAA,EAFA,EAEA,CAFA,CAAC;AAIK,4BAAA,GAAyD;IAFhE,UAAU,EAGE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAF7B,UAAU,EAGE,CAAA,EAAG,IAAA,EAAM,WAAA,EAAa,IAAA,EAAM,CAAA,gBAAE,EAAgB,EAAG,EAAE,EAAE,IAAA,EAAM,KAAA,EAAM,EAAE;IAF/E,OAAO,EAGE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAFzB,CAGC;AAAF;IACA,gBAAgB;IAChB,aAAa,CAAC,UAAU,CAAC;IACzB;;;OAGG;IACH,aAAa,CAAC,cAAc,CAAC;IAC7B,gBAAgB;IAChB,aAAa,CAAC,cAAc,CAAC;IAC7B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC;AAC9B,CAAC","file":"popup-arrow.js","sourceRoot":"","sourcesContent":["import {Component, Input, Renderer, ElementRef, HostBinding} from '@angular/core';\r\nimport Popper from 'popper.js';\nexport class SuiPopupArrow {\npublic position:Popper.Data;\npublic inverted:boolean;\npublic basic:boolean;\n/**\n * @return {?}\n */\npublic get direction() {\r\n        if (this.position) {\r\n            return this.position.placement.split(\"-\").shift();\r\n        }\r\n    }\n/**\n * @return {?}\n */\npublic get alignment() {\r\n        if (this.position) {\r\n            const /** @type {?} */ alignment = this.position.placement.split(\"-\").pop();\r\n            if (alignment == this.direction) {\r\n                return \"center\";\r\n            }\r\n            return alignment;\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'sui-popup-arrow',\r\n    template: `\r\n<ng-container *ngIf=\"!basic\">\r\n    <div class=\"dynamic arrow\" [attr.direction]=\"direction\" *ngIf=\"alignment == 'center'\"></div>\r\n    <div class=\"static arrow\" [attr.direction]=\"direction\" [attr.alignment]=\"alignment\" *ngIf=\"alignment != 'center'\"></div>\r\n</ng-container>\r\n`,\r\n    styles: [`\r\n.arrow {\r\n    position: absolute;\r\n    width: 0.71428571em;\r\n    height: 0.71428571em;\r\n    background: #ffffff;\r\n    -webkit-transform: rotate(45deg);\r\n    -ms-transform: rotate(45deg);\r\n    transform: rotate(45deg);\r\n    z-index: 2;\r\n}\r\n\r\n:host.inverted .arrow {\r\n    background: #1b1c1d;\r\n}\r\n\r\n.arrow[direction=\"top\"] {\r\n    bottom: -0.30714286em;\r\n    box-shadow: 1px 1px 0 0 #bababc;\r\n}\r\n\r\n.arrow[direction=\"left\"] {\r\n    right: -0.30714286em;\r\n    box-shadow: 1px -1px 1px 0 #bababc;\r\n}\r\n\r\n.arrow[direction=\"bottom\"] {\r\n    top: -0.30714286em;\r\n    box-shadow: -1px -1px 0 0 #bababc;\r\n}\r\n\r\n.arrow[direction=\"right\"] {\r\n    left: -0.30714286em;\r\n    box-shadow: -1px 1px 1px 0 #bababc;\r\n}\r\n\r\n.static.arrow[direction=\"bottom\"][alignment=\"start\"],\r\n.static.arrow[direction=\"top\"][alignment=\"start\"] {\r\n    left: 1em;\r\n    right: auto;\r\n}\r\n\r\n.static.arrow[direction=\"left\"][alignment=\"start\"],\r\n.static.arrow[direction=\"right\"][alignment=\"start\"] {\r\n    top: 1em;\r\n    bottom: auto;\r\n}\r\n\r\n.static.arrow[direction=\"bottom\"][alignment=\"end\"],\r\n.static.arrow[direction=\"top\"][alignment=\"end\"] {\r\n    left: auto;\r\n    right: 1em;\r\n}\r\n\r\n.static.arrow[direction=\"left\"][alignment=\"end\"],\r\n.static.arrow[direction=\"right\"][alignment=\"end\"] {\r\n    top: auto;\r\n    bottom: 1em;\r\n}\r\n`]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input },],\n'inverted': [{ type: HostBinding, args: [\"class.inverted\", ] },{ type: Input },],\n'basic': [{ type: Input },],\n};\n}\n\nfunction SuiPopupArrow_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiPopupArrow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiPopupArrow.ctorParameters;\n/** @type {?} */\nSuiPopupArrow.propDecorators;\n/** @type {?} */\nSuiPopupArrow.prototype.position;\n/** @type {?} */\nSuiPopupArrow.prototype.inverted;\n/** @type {?} */\nSuiPopupArrow.prototype.basic;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}