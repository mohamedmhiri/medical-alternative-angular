{"version":3,"sources":["popup.ts"],"names":[],"mappings":"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","file":"popup.js","sourceRoot":"","sourcesContent":["import {Component, ViewChild, ViewContainerRef, ElementRef, Renderer, EventEmitter, TemplateRef, HostListener} from '@angular/core';\r\nimport {SuiTransition, Transition, TransitionDirection} from '../transition/transition';\r\nimport {TransitionController} from '../transition/transition-controller';\r\nimport {PositioningService, PositioningPlacement} from '../util/positioning.service';\r\nimport {TemplateRefContext} from '../util/util';\r\nimport Popper from 'popper.js';\r\n\r\nexport interface IPopupConfiguration {\r\n    template?:TemplateRef<TemplateRefContext<SuiPopup>>;\r\n    header?:string;\r\n    text?:string;\r\n    inverted?:boolean;\r\n    basic?:boolean;\r\n    transition?:string;\r\n    transitionDuration?:number;\r\n}\nexport class SuiPopup {\npublic transitionController:TransitionController;\nprivate _templateInjected:boolean;\npublic config:IPopupConfiguration;\nprivate _position:PositioningService;\npublic placement:PositioningPlacement;\n/**\n * @param {?} anchor\n * @return {?}\n */\npublic set anchor(anchor:ElementRef) {\r\n        this._position = new PositioningService(anchor, this._container.element, this.placement, \".dynamic.arrow\");\r\n    }\n/**\n * @return {?}\n */\npublic get position():Popper.Data {\r\n        if (this._position) {\r\n            return this._position.state;\r\n        }\r\n        return null;\r\n    }\n/**\n * @return {?}\n */\npublic get direction() {\r\n        if (this.position) {\r\n            return this.position.placement.split(\"-\").shift();\r\n        }\r\n    }\nprivate _isOpen:boolean;\nprivate _closingTimeout:number;\npublic onClose:EventEmitter<void>;\n/**\n * @return {?}\n */\npublic get isOpen() {\r\n        return this._isOpen;\r\n    }\nprivate _container:ViewContainerRef;\nprivate _templateSibling:ViewContainerRef;\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef:ElementRef) {\r\n        this.transitionController = new TransitionController(false);\r\n\r\n        this._templateInjected = false;\r\n\r\n        this.config = {\r\n            inverted: false,\r\n            transition: \"scale\",\r\n            transitionDuration: 200\r\n        };\r\n\r\n        this._isOpen = false;\r\n        this.onClose = new EventEmitter<void>();\r\n    }\n/**\n * @return {?}\n */\npublic open() {\r\n        if (!this._isOpen) {\r\n            clearTimeout(this._closingTimeout);\r\n\r\n            if (this.config.template && !this._templateInjected) {\r\n                this._templateSibling.createEmbeddedView(this.config.template, { $implicit: this });\r\n                this._templateInjected = true;\r\n            }\r\n            \r\n            this.transitionController.stopAll();\r\n            this.transitionController.animate(new Transition(this.config.transition, this.config.transitionDuration, TransitionDirection.In));\r\n\r\n            setTimeout(() => this._position.update());\r\n\r\n            this._isOpen = true;\r\n        }\r\n    }\n/**\n * @return {?}\n */\npublic close() {\r\n        if (this._isOpen) {\r\n            this.transitionController.stopAll();\r\n            this.transitionController.animate(new Transition(this.config.transition, this.config.transitionDuration, TransitionDirection.Out));\r\n\r\n            clearTimeout(this._closingTimeout);\r\n            this._closingTimeout = window.setTimeout(() => this.onClose.emit(), this.config.transitionDuration);\r\n\r\n            this._isOpen = false;\r\n        }\r\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onClick(event:MouseEvent) {\r\n        // Makes sense here, as the popup shouldn't be attached to any DOM element.\r\n        event.stopPropagation();\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'sui-popup',\r\n    template: `\r\n<div class=\"ui popup\" [class.inverted]=\"config.inverted\" [class.basic]=\"config.basic\" [suiTransition]=\"transitionController\" [attr.direction]=\"direction\" #container>\r\n    <ng-container *ngIf=\"!config.template\">\r\n        <div class=\"header\" *ngIf=\"config.header\">{{ config.header }}</div>\r\n        <div class=\"content\">{{ config.text }}</div>\r\n    </ng-container>\r\n    <div #templateSibling></div>\r\n    <sui-popup-arrow [position]=\"position\" [inverted]=\"config.inverted\" [basic]=\"config.basic\"></sui-popup-arrow>\r\n</div>\r\n`,\r\n    styles: [`\r\n.ui.popup {\r\n    right: auto;\r\n}\r\n\r\n.ui.animating.popup {\r\n    /* When the popup is animating, it may not initially be in the correct position.\r\n       This fires a mouse event, causing the anchor's mouseleave to fire - making the popup flicker.\r\n       Setting pointer-events to none while animating fixes this bug. */\r\n    pointer-events: none;\r\n}\r\n\r\n.ui.popup::before {\r\n    display: none;\r\n}\r\n\r\n.ui.popup[direction=\"top\"],\r\n.ui.popup[direction=\"bottom\"] {\r\n    margin-top: 1em;\r\n    margin-bottom: 1em;\r\n}\r\n\r\n.ui.popup[direction=\"left\"],\r\n.ui.popup[direction=\"right\"] {\r\n    margin-left: 1em;\r\n    margin-right: 1em;\r\n}\r\n`]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef }, ] },],\n'_templateSibling': [{ type: ViewChild, args: ['templateSibling', { read: ViewContainerRef }, ] },],\n'onClick': [{ type: HostListener, args: [\"click\", [\"$event\"], ] },],\n};\n}\n\nfunction SuiPopup_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiPopup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiPopup.ctorParameters;\n/** @type {?} */\nSuiPopup.propDecorators;\n/** @type {?} */\nSuiPopup.prototype.transitionController;\n/** @type {?} */\nSuiPopup.prototype._templateInjected;\n/** @type {?} */\nSuiPopup.prototype.config;\n/** @type {?} */\nSuiPopup.prototype._position;\n/** @type {?} */\nSuiPopup.prototype.placement;\n/** @type {?} */\nSuiPopup.prototype._isOpen;\n/** @type {?} */\nSuiPopup.prototype._closingTimeout;\n/** @type {?} */\nSuiPopup.prototype.onClose;\n/** @type {?} */\nSuiPopup.prototype._container;\n/** @type {?} */\nSuiPopup.prototype._templateSibling;\n/** @type {?} */\nSuiPopup.prototype.elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}