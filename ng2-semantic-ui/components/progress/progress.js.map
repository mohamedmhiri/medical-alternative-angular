{"version":3,"sources":["progress.ts"],"names":[],"mappings":"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","file":"progress.js","sourceRoot":"","sourcesContent":["import {Component, Input, HostBinding} from '@angular/core';\nexport class SuiProgress {\nprivate _popupClasses = true;\nprivate _value:number;\nprivate _maximum:number;\nprivate _precision:number;\npublic autoSuccess:boolean;\npublic showProgress:boolean;\n/**\n * @return {?}\n */\npublic get value() {\r\n        return this._value;\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set value(value:number) {\r\n        // Convert value from string to number where necessary.\r\n        value = +value;\r\n\r\n        if (Number.isNaN(value)) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n    }\n/**\n * @return {?}\n */\npublic get maximum() {\r\n        return this._maximum;\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set maximum(value:number) {\r\n        // Convert value from string to number where necessary.\r\n        value = +value;\r\n\r\n        if (Number.isNaN(value)) {\r\n            return;\r\n        }\r\n\r\n        this._maximum = value;\r\n    }\n/**\n * @return {?}\n */\npublic get precision() {\r\n        return this._precision;\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set precision(value:number) {\r\n        // Convert value from string to number where necessary.\r\n        value = +value;\r\n\r\n        if (Number.isNaN(value)) {\r\n            return;\r\n        }\r\n\r\n        this._precision = Math.min(Math.max(value, 0), 20);\r\n    }\n/**\n * @return {?}\n */\nprivate get reachedMaximum() {\r\n        return (this.value >= this.maximum) && this.autoSuccess;\r\n    }\n/**\n * @return {?}\n */\npublic get percentage() {\r\n        const /** @type {?} */ boundedValue = Math.min(Math.max(this.value, 0), this.maximum);\r\n\r\n        const /** @type {?} */ percentage = (boundedValue / this.maximum) * 100;\r\n\r\n        return percentage.toFixed(this.precision);\r\n    }\n/**\n * @param {?} classes\n * @return {?}\n */\nprivate set classValue(classes:string) {\r\n        if (classes.includes(\"attached\") || classes.includes(\"tiny\")) {\r\n            this.showProgress = false;\r\n        }\r\n    }\nconstructor() {\r\n        this.value = 0;\r\n        this.maximum = 100;\r\n        this.precision = 0;\r\n\r\n        this.autoSuccess = true;\r\n        this.showProgress = true;\r\n\r\n        this._popupClasses = true;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'sui-progress',\r\n    template: `\r\n<div class=\"bar\" [style.width.%]=\"percentage\">\r\n    <div class=\"progress\" *ngIf=\"showProgress\">{{ percentage }}%</div>\r\n</div>\r\n<div class=\"label\">\r\n    <ng-content></ng-content>\r\n</div>\r\n`,\r\n    styles: [`\r\n.bar {\r\n    transition-duration: 300ms !important;\r\n}\r\n`]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_popupClasses': [{ type: HostBinding, args: ['class.ui', ] },{ type: HostBinding, args: ['class.progress', ] },],\n'autoSuccess': [{ type: Input },],\n'showProgress': [{ type: Input },],\n'value': [{ type: Input },],\n'maximum': [{ type: Input },],\n'precision': [{ type: Input },],\n'reachedMaximum': [{ type: HostBinding, args: ['class.success', ] },],\n'percentage': [{ type: HostBinding, args: ['attr.data-percent', ] },],\n'classValue': [{ type: Input, args: ['class', ] },],\n};\n}\n\nfunction SuiProgress_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiProgress.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiProgress.ctorParameters;\n/** @type {?} */\nSuiProgress.propDecorators;\n/** @type {?} */\nSuiProgress.prototype._popupClasses;\n/** @type {?} */\nSuiProgress.prototype._value;\n/** @type {?} */\nSuiProgress.prototype._maximum;\n/** @type {?} */\nSuiProgress.prototype._precision;\n/** @type {?} */\nSuiProgress.prototype.autoSuccess;\n/** @type {?} */\nSuiProgress.prototype.showProgress;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}