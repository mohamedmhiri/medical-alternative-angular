{"version":3,"sources":["message.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAkD,MAAA,eAAA,CAAA;AACpF,OAAO,EAAgB,UAAA,EAAY,mBAAA,EAAoB,MAAA,0BAAA,CAAA;AACvD,OAAO,EAAA,oBAAE,EAAoB,MAAA,qCAAA,CAAA;AAK7B;IAQA;QACQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAc,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAE9B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IACL;;OAEG;IAaE,4BAAA,GAZL;QAAA,iBAKK;QAJG,IAAI,CAYC,WAAC,CAAW,OAAC,CAAO,IAAI,UAAA,CAAW,IAAC,CAAI,UAAC,EAAW,IAAA,CAAK,kBAAC,EAAmB,mBAAA,CAAoB,GAAC,EAAI;YAXvG,KAAI,CAYC,WAAC,GAAa,IAAA,CAAK;YAXxB,KAAI,CAYC,SAAC,CAAS,IAAC,CAAI,KAAC,CAAI,CAAC;QAX9B,CAAC,CAYC,CAAC,CAAC;IAXR,CAAC;IAwBL,iBAAC;AAAD,CApDA,AAoDC;;AAXM,qBAAA,GAAoC;IAX3C,EAYE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAXrB,QAAQ,EAYE,aAAA;gBAXV,QAAQ,EAYE,6NAPb;aACA,EAYC,EAAG;CAXJ,CAYC;AAXF;;GAEG;AAWF,yBAAA,GAAA,cAAA,OAAA,EATA,EASA,CATA,CAAC;AAWK,yBAAA,GAAyD;IAThE,eAAe,EAUE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IATlC,WAAW,EAUE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,SAAE,EAAS,EAAG,EAAE;IATpD,YAAY,EAUE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAT/B,oBAAoB,EAUE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IATvC,UAAU,EAUE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,OAAE,EAAO,EAAG,EAAE;CAT/C,CAUC;AAPF;IACA,gBAAgB;IAChB,UAAU,CAAC,UAAU,CAAC;IACtB;;;OAGG;IACH,UAAU,CAAC,cAAc,CAAC;IAC1B,gBAbE;IAcF,UAAU,CAAC,cAAc,CAAC;IAC1B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;IACnC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;IAC/B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC;IACjC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC;IACjC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;IAChC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC;IACxC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC9B,CAAC","file":"message.js","sourceRoot":"","sourcesContent":["import {Component, Input, Output, EventEmitter, ElementRef, Renderer, AfterViewInit} from '@angular/core';\r\nimport {SuiTransition, Transition, TransitionDirection} from '../transition/transition';\r\nimport {TransitionController} from '../transition/transition-controller';\r\n\r\nexport interface IMessage {\r\n    dismiss():void;\r\n}\nexport class SuiMessage implements IMessage {\npublic isDismissable:boolean;\npublic onDismiss:EventEmitter<SuiMessage>;\npublic isDismissed:boolean;\nprivate _transition:TransitionController;\npublic transition:string;\npublic transitionDuration:number;\nprivate _classes:string;\nconstructor() {\r\n        this.isDismissable = true;\r\n        this.onDismiss = new EventEmitter<SuiMessage>();\r\n\r\n        this.isDismissed = false;\r\n\r\n        this._transition = new TransitionController();\r\n        this.transition = \"fade\";\r\n        this.transitionDuration = 300;\r\n\r\n        this._classes = \"\";\r\n    }\n/**\n * @return {?}\n */\npublic dismiss() {\r\n        this._transition.animate(new Transition(this.transition, this.transitionDuration, TransitionDirection.Out, () => {\r\n            this.isDismissed = true;\r\n            this.onDismiss.emit(this);\r\n        }));\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'sui-message',\r\n    template: `\r\n<div class=\"ui message {{ _classes }}\" *ngIf=\"!isDismissed\" [suiTransition]=\"_transition\">\r\n    <i class=\"close icon\" *ngIf=\"isDismissable\" (click)=\"dismiss()\"></i>\r\n    <ng-content></ng-content>\r\n</div>\r\n`\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDismissable': [{ type: Input },],\n'onDismiss': [{ type: Output, args: [\"dismiss\", ] },],\n'transition': [{ type: Input },],\n'transitionDuration': [{ type: Input },],\n'_classes': [{ type: Input, args: [\"class\", ] },],\n};\n}\n\nfunction SuiMessage_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiMessage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiMessage.ctorParameters;\n/** @type {?} */\nSuiMessage.propDecorators;\n/** @type {?} */\nSuiMessage.prototype.isDismissable;\n/** @type {?} */\nSuiMessage.prototype.onDismiss;\n/** @type {?} */\nSuiMessage.prototype.isDismissed;\n/** @type {?} */\nSuiMessage.prototype._transition;\n/** @type {?} */\nSuiMessage.prototype.transition;\n/** @type {?} */\nSuiMessage.prototype.transitionDuration;\n/** @type {?} */\nSuiMessage.prototype._classes;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}