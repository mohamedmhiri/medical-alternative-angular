{"version":3,"sources":["search.service.ts"],"names":[],"mappings":"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","file":"search.service.js","sourceRoot":"","sourcesContent":["import {readValue} from '../util/util';\r\n\r\n// Define useful types to avoid any.\r\nexport type LookupFn<T> = (query:string) => Promise<T[]> | Promise<T>;\r\nexport type QueryLookupFn<T> = (query:string) => Promise<T[]>;\r\nexport type ItemLookupFn<T, U> = (query:string, initial:U) => Promise<T>;\r\nexport type ItemsLookupFn<T, U> = (query:string, initial:U[]) => Promise<T[]>;\r\n\r\ntype CachedArray<T> = { [query:string]:T[] };\nexport class SearchService<T> {\nprivate _options:T[];\nprivate _optionsLookup:LookupFn<T>;\nprivate _optionsField:string;\n/**\n * @return {?}\n */\npublic get options() {\r\n        return this._options;\r\n    }\n/**\n * @param {?} options\n * @return {?}\n */\npublic set options(options:T[]) {\r\n        this._options = options || [];\r\n        // We cannot use both local & remote options simultaneously.\r\n        this._optionsLookup = null;\r\n        // Reset entire service with new options.\r\n        this.reset();\r\n    }\n/**\n * @return {?}\n */\npublic get optionsLookup() {\r\n        return this._optionsLookup;\r\n    }\n/**\n * @param {?} lookupFn\n * @return {?}\n */\npublic set optionsLookup(lookupFn:LookupFn<T>) {\r\n        this._optionsLookup = lookupFn;\r\n        // As before, cannot use local & remote options simultaneously.\r\n        this._options = [];\r\n        this.reset();\r\n    }\n/**\n * @return {?}\n */\npublic get queryLookup() {\r\n        return /** @type {?} */(( this._optionsLookup as QueryLookupFn<T>));\r\n    }\n/**\n * @return {?}\n */\npublic get hasItemLookup() {\r\n         return this.optionsLookup && this.optionsLookup.length == 2;\r\n    }\n/**\n * @template U\n * @param {?} initial\n * @return {?}\n */\npublic itemLookup<U>(initial:U) {\r\n        return ( /** @type {?} */((this._optionsLookup as ItemLookupFn<T, U>)))(undefined, initial);\r\n    }\n/**\n * @template U\n * @param {?} initial\n * @return {?}\n */\npublic itemsLookup<U>(initial:U[]) {\r\n        return ( /** @type {?} */((this._optionsLookup as ItemsLookupFn<T, U>)))(undefined, initial);\r\n    }\n/**\n * @return {?}\n */\npublic get optionsField() {\r\n        return this._optionsField\r\n    }\n/**\n * @param {?} field\n * @return {?}\n */\npublic set optionsField(field:string) {\r\n        this._optionsField = field;\r\n        // We need to reset otherwise we would now be showing invalid search results.\r\n        this.reset();\r\n    }\nprivate _results:T[];\nprivate _resultsCache:CachedArray<T>;\n/**\n * @return {?}\n */\npublic get results() {\r\n        return this._results;\r\n    }\nprivate _query:string;\npublic allowEmptyQuery:boolean;\npublic searchDelay:number;\nprivate _searchDelayTimeout:number;\nprivate _isSearching:boolean;\n/**\n * @return {?}\n */\npublic get query() {\r\n        return this._query;\r\n    }\n/**\n * @return {?}\n */\npublic get isSearching() {\r\n        return this._isSearching;\r\n    }\n/**\n * @param {?=} allowEmptyQuery\n */\nconstructor(allowEmptyQuery:boolean = false) {\r\n        this._options = [];\r\n\r\n        // Set default values and reset.\r\n        this.allowEmptyQuery = allowEmptyQuery;\r\n        this.searchDelay = 0;\r\n        this.reset();\r\n    }\n/**\n * @param {?} query\n * @param {?=} callback\n * @return {?}\n */\npublic updateQueryDelayed(query:string, callback:(err?:Error) => void = () => {}) {\r\n        this._query = query;\r\n\r\n        clearTimeout(this._searchDelayTimeout);\r\n        this._searchDelayTimeout = window.setTimeout(() => {\r\n            this.updateQuery(query, callback);\r\n        }, this.searchDelay);\r\n    }\n/**\n * @param {?} query\n * @param {?=} callback\n * @return {?}\n */\npublic updateQuery(query:string, callback:(err?:Error) => void = () => {}):void {\r\n        this._query = query;\r\n\r\n        if (this._query == \"\" && !this.allowEmptyQuery) {\r\n            // Don't update if the new query is empty (and we don't allow empty queries).\r\n            // Don't reset so that when animating closed we don't get a judder.\r\n            return callback(null);\r\n        }\r\n\r\n        if (this._resultsCache.hasOwnProperty(this._query)) {\r\n            // If the query is already cached, make use of it.\r\n            this._results = this._resultsCache[this._query];\r\n\r\n            return callback(null);\r\n        }\r\n\r\n        if (this._optionsLookup) {\r\n            this._isSearching = true;\r\n\r\n            this.queryLookup(this._query)\r\n                .then(results => {\r\n                    // Unset 'loading' state, and display & cache the results.\r\n                    this._isSearching = false;\r\n                    this.updateResults(results);\r\n                    return callback(null);\r\n                })\r\n                .catch(error => {\r\n                    // Unset 'loading' state, and throw the returned error without updating the results.\r\n                    this._isSearching = false;\r\n                    return callback(error);\r\n                });\r\n            return;\r\n        }\r\n\r\n        // Convert the query string to a RegExp.\r\n        const /** @type {?} */ regex = this.toRegex(this._query);\r\n\r\n        if (regex instanceof RegExp) {\r\n            // Only update the results if the query was valid regex.\r\n            // This avoids the results suddenly becoming empty if an invalid regex string is inputted.\r\n            this.updateResults(this._options\r\n                // Filter on the options with a string match on the field we are testing.\r\n                .filter(o => readValue<T, string>(o, this._optionsField)\r\n                    .toString()\r\n                    .match(regex)));\r\n        }\r\n\r\n        return callback(null);\r\n    }\n/**\n * @param {?} results\n * @return {?}\n */\nprivate updateResults(results:T[]) {\r\n        this._resultsCache[this._query] = results;\r\n        this._results = results;\r\n    }\n/**\n * @param {?} query\n * @return {?}\n */\nprivate toRegex(query:string):RegExp | string {\r\n        try {\r\n            return new RegExp(query, 'i');\r\n        }\r\n        catch ( /** @type {?} */e) {\r\n            return query;\r\n        }\r\n    }\n/**\n * @param {?} text\n * @return {?}\n */\npublic highlightMatches(text:string) {\r\n        let /** @type {?} */ regex = this.toRegex(this._query);\r\n        if (regex instanceof RegExp) {\r\n            return text.replace(regex, (match) => `<b>${match}</b>`);\r\n        }\r\n        return text;\r\n    }\n/**\n * @return {?}\n */\nprivate reset() {\r\n        this._results = [];\r\n        this._resultsCache = {};\r\n        this._isSearching = false;\r\n        this.updateQuery(\"\");\r\n    }\r\n}\n\nfunction SearchService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchService.prototype._options;\n/** @type {?} */\nSearchService.prototype._optionsLookup;\n/** @type {?} */\nSearchService.prototype._optionsField;\n/** @type {?} */\nSearchService.prototype._results;\n/** @type {?} */\nSearchService.prototype._resultsCache;\n/** @type {?} */\nSearchService.prototype._query;\n/** @type {?} */\nSearchService.prototype.allowEmptyQuery;\n/** @type {?} */\nSearchService.prototype.searchDelay;\n/** @type {?} */\nSearchService.prototype._searchDelayTimeout;\n/** @type {?} */\nSearchService.prototype._isSearching;\n}\n"]}