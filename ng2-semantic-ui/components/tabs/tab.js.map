{"version":3,"sources":["tab.ts"],"names":[],"mappings":"AAEA;IAKA;;;OAGG;IACH,aAFK,MAAmB,EAAa,OAAS;QAE9C,iBAQK;QAPG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,yEAAyE;QACzE,IAAI,CAAC,MAAM,CAAC,cAAc;aACrB,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,EAArC,CAAqC,CAAC,CAAC;IAChE,CAAC;IAIL,sBAHK,yBAAA;QAAL;;WAEG;aACH;YACQ,MAAM,CAHC,IAAA,CAAK,MAAC,CAAM,QAAC,CAAQ;QAIhC,CAAC;QACL;;;WAGG;aACH,UANK,MAAA;YAOG,mEAAmE;YACnE,IAAI,CANC,MAAC,CAAM,cAAC,CAAc,MAAC,CAAM,CAAC;QAOvC,CAAC;;;OARA;IAYL,sBAPK,2BAAA;QAIL;;WAEG;aACH;YACQ,MAAM,CAPC,IAAA,CAAK,MAAC,CAAM,UAAC,CAAU;QAQlC,CAAC;;;OAAA;IACL,UAAC;AAAD,CAtCA,AAsCC,IAAA;;AAED;IACA,gBAAgB;IAChB,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;IACjB,gBAAgB;IAChB,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC;IACrB,gBAAgB;IAChB,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;IACtB,gBAAgB;IAChB,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC;AACpB,CAAC","file":"tab.js","sourceRoot":"","sourcesContent":["import {SuiTabHeader} from './tab-header';\r\nimport {SuiTabContent} from './tab-content';\nexport class Tab {\npublic id:string;\npublic header:SuiTabHeader;\npublic content:SuiTabContent;\npublic index:number;\n/**\n * @param {?} header\n * @param {?} content\n */\nconstructor(header:SuiTabHeader, content:SuiTabContent) {\r\n        this.id = header.id;\r\n        this.header = header;\r\n        this.content = content;\r\n\r\n        // So that the header and content isActive properties are always in sync.\r\n        this.header.isActiveChange\r\n            .subscribe(() => this.content.isActive = this.isActive);\r\n    }\n/**\n * @return {?}\n */\npublic get isActive() {\r\n        return this.header.isActive;\r\n    }\n/**\n * @param {?} active\n * @return {?}\n */\npublic set isActive(active:boolean) {\r\n        // Use `setActiveState` so as not to fire 'external changes' event.\r\n        this.header.setActiveState(active);\r\n    }\n/**\n * @return {?}\n */\npublic get isDisabled() {\r\n        return this.header.isDisabled;\r\n    }\r\n}\n\nfunction Tab_tsickle_Closure_declarations() {\n/** @type {?} */\nTab.prototype.id;\n/** @type {?} */\nTab.prototype.header;\n/** @type {?} */\nTab.prototype.content;\n/** @type {?} */\nTab.prototype.index;\n}\n"]}