{"version":3,"sources":["tab-header.ts"],"names":[],"mappings":"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","file":"tab-header.js","sourceRoot":"","sourcesContent":["import {Component, HostBinding, Input, Directive, EventEmitter, HostListener, Output} from '@angular/core';\nexport class SuiTabHeader {\nprivate _headerClasses:boolean;\npublic id:string;\nprivate _isActive:boolean;\npublic isActiveChange:EventEmitter<boolean>;\npublic isActiveExternalChange:EventEmitter<boolean>;\npublic onActivate:EventEmitter<void>;\npublic onDeactivate:EventEmitter<void>;\n/**\n * @return {?}\n */\npublic get isActive() {\r\n        return this._isActive;\r\n    }\n/**\n * @param {?} active\n * @return {?}\n */\npublic set isActive(active:boolean) {\r\n        // Only used by @Input(), runs whenever user input changes `isActive`.\r\n        // Run in timeout because `isDisabled` can prohibit user from changing `isActive` so update is delayed to avoid 'changed after checked' error.\r\n        setTimeout(() => {\r\n            // Only allow change if tab header is not disabled.\r\n            active = !this.isDisabled ? active : false;\r\n            this.setActiveState(active);\r\n\r\n            // Fire 'external change' event as user input has occured.            \r\n            this.isActiveExternalChange.emit(active);\r\n        });\r\n    }\nprivate _isDisabled:boolean;\n/**\n * @return {?}\n */\npublic get isDisabled() {\r\n        return this._isDisabled;\r\n    }\n/**\n * @param {?} disabled\n * @return {?}\n */\npublic set isDisabled(disabled:boolean) {\r\n        // Only update if value provided is different to current one.\r\n        if (this._isDisabled != disabled) {\r\n            this._isDisabled = disabled;\r\n            \r\n            // If now disabled, then tab header must be deactivated.\r\n            if (this.isDisabled) {\r\n                this.isActive = false;\r\n            }\r\n        }\r\n    }\nconstructor() {\r\n        this._isActive = false;\r\n        this.isActiveChange = new EventEmitter<boolean>();\r\n        this.isActiveExternalChange = new EventEmitter<boolean>();\r\n\r\n        this.onActivate = new EventEmitter<void>();\r\n        this.onDeactivate = new EventEmitter<void>();\r\n\r\n        this.isDisabled = false;\r\n\r\n        this._headerClasses = true;\r\n    }\n/**\n * @param {?} active\n * @return {?}\n */\npublic setActiveState(active:boolean) {\r\n        // If (cast) active value has changed:\r\n        if (!!this._isActive != active) {\r\n            // Update to the new value.\r\n            this._isActive = active;\r\n\r\n            // Fire the appropriate activation event.\r\n            if (active) {\r\n                this.onActivate.emit();\r\n            }\r\n            else {\r\n                this.onDeactivate.emit();\r\n            }\r\n        }\r\n\r\n        // Regardless, emit a change to `isActive`, so [(isActive)] works correctly.\r\n        this.isActiveChange.emit(active);\r\n    }\n/**\n * @return {?}\n */\nprivate onClick() {\r\n        if (!this.isDisabled) {\r\n            // Activate the tab when clicked, so long as it isn't disabled.\r\n            this.isActive = true;\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[suiTabHeader]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_headerClasses': [{ type: HostBinding, args: ['class.item', ] },],\n'id': [{ type: Input, args: [\"suiTabHeader\", ] },],\n'isActiveChange': [{ type: Output },],\n'onActivate': [{ type: Output, args: [\"activate\", ] },],\n'onDeactivate': [{ type: Output, args: [\"deactivate\", ] },],\n'isActive': [{ type: HostBinding, args: ['class.active', ] },{ type: Input },],\n'isDisabled': [{ type: HostBinding, args: ['class.disabled', ] },{ type: Input },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction SuiTabHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiTabHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiTabHeader.ctorParameters;\n/** @type {?} */\nSuiTabHeader.propDecorators;\n/** @type {?} */\nSuiTabHeader.prototype._headerClasses;\n/** @type {?} */\nSuiTabHeader.prototype.id;\n/** @type {?} */\nSuiTabHeader.prototype._isActive;\n/** @type {?} */\nSuiTabHeader.prototype.isActiveChange;\n/** @type {?} */\nSuiTabHeader.prototype.isActiveExternalChange;\n/** @type {?} */\nSuiTabHeader.prototype.onActivate;\n/** @type {?} */\nSuiTabHeader.prototype.onDeactivate;\n/** @type {?} */\nSuiTabHeader.prototype._isDisabled;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}