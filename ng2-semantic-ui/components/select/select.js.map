{"version":3,"sources":["select.ts"],"names":[],"mappings":"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","file":"select.js","sourceRoot":"","sourcesContent":["import {Component, ViewContainerRef, ViewChild, Output, EventEmitter, ElementRef, Renderer, forwardRef, Directive} from '@angular/core';\r\nimport {SuiSelectBase} from './select-base';\r\nimport {ISelectRenderedOption} from './select-option';\r\nimport {customValueAccessorFactory, CustomValueAccessorHost, CustomValueAccessor} from '../util/custom-value-accessor';\r\n\r\nexport type SingleItemLookup<T, U> = (query:string, initial?:U) => Promise<T>;\nexport class SuiSelect<T, U> extends SuiSelectBase<T, U> implements CustomValueAccessorHost<U> {\npublic selectedOption:T;\nprivate _writtenOption:U;\nprivate _optionTemplateSibling:ViewContainerRef;\npublic selectedOptionChange:EventEmitter<U>;\n/**\n * @return {?}\n */\nprotected optionsUpdateHook() {\r\n        if (this._writtenOption && this.searchService.options.length > 0) {\r\n            // If there was an value written by ngModel before the options had been loaded, this runs to fix it.\r\n            this.selectedOption = this.findOption(this.searchService.options, this._writtenOption);\r\n            if (this.selectedOption) {\r\n                this._writtenOption = null;\r\n                this.drawSelectedOption();\r\n            }\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected queryUpdateHook() {\r\n        // When the query is updated, we just abandon the current selection.\r\n        this.selectedOption = null;\r\n    }\n/**\n * @param {?} element\n * @param {?} renderer\n */\nconstructor(element:ElementRef, renderer:Renderer) {\r\n        super(element, renderer);\r\n\r\n        this.placeholder = \"Select one\";\r\n\r\n        this.selectedOptionChange = new EventEmitter<U>();\r\n    }\n/**\n * @param {?} option\n * @return {?}\n */\npublic selectOption(option:T) {\r\n        // Choose and emit the selected option.\r\n        this.selectedOption = option;\r\n        this.selectedOptionChange.emit(this.valueGetter(option));\r\n\r\n        this.dropdownService.setOpenState(false);\r\n\r\n        // The search delay is set to the transition duration to ensure results aren't rendered as the select closes as that causes a sudden flash.\r\n        this.searchService.searchDelay = this._menu.menuTransitionDuration;\r\n        this.searchService.updateQueryDelayed(\"\");\r\n\r\n        this.drawSelectedOption();\r\n\r\n        // Automatically refocus the search input for better keyboard accessibility.\r\n        this.focusInput();\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic writeValue(value:U) {\r\n        if (value != null) {\r\n            if (this.searchService.options.length > 0) {\r\n                // If the options have already been loaded, we can immediately match the ngModel value to an option.\r\n                this.selectedOption = this.findOption(this.searchService.options, value);\r\n            }\r\n            if (!this.selectedOption) {\r\n                if (this.valueField && this.searchService.hasItemLookup) {\r\n                    // If the search service has a selected lookup function, make use of that to load the initial value.\r\n                    ( /** @type {?} */((this.searchService.itemLookup<U>(value) as Promise<T>)))\r\n                        .then(r => {\r\n                            this.selectedOption = r;\r\n\r\n                            this.drawSelectedOption();\r\n                        });\r\n                    return;\r\n                }\r\n                else {\r\n                    // Otherwise, cache the written value for when options are set.\r\n                    this._writtenOption = value;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.drawSelectedOption();\r\n    }\n/**\n * @param {?} option\n * @return {?}\n */\nprotected initialiseRenderedOption(option:ISelectRenderedOption<T>) {\r\n        super.initialiseRenderedOption(option);\r\n\r\n        // Boldens the item so it appears selected in the dropdown.\r\n        option.isActive = option.value == this.selectedOption;\r\n    }\n/**\n * @return {?}\n */\nprivate drawSelectedOption() {\r\n        // Updates the active class on the newly selected option.\r\n        if (this._renderedOptions) {\r\n            this.onAvailableOptionsRendered();\r\n        }\r\n\r\n        if (this.selectedOption && this.optionTemplate) {\r\n            this.drawTemplate(this._optionTemplateSibling, this.selectedOption);\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'sui-select',\r\n    template: `\r\n<i class=\"dropdown icon\"></i>\r\n<!-- Query input -->\r\n<input [hidden]=\"!isSearchable\" class=\"search\" type=\"text\" autocomplete=\"off\" [(ngModel)]=\"query\" #queryInput>\r\n<!-- Placeholder text -->\r\n<div *ngIf=\"!selectedOption\" class=\"default text\" [class.filtered]=\"!!query\">{{ placeholder }}</div>\r\n<!-- Selected item -->\r\n<div class=\"text\" [class.filtered]=\"!!query || !selectedOption\">\r\n    <span #optionTemplateSibling></span>\r\n    <span *ngIf=\"!optionTemplate\">{{ labelGetter(selectedOption) }}</span>\r\n</div>\r\n<!-- Select dropdown menu -->\r\n<div class=\"menu\" suiDropdownMenu [menuAutoSelectFirst]=\"isSearchable\">\r\n    <ng-content></ng-content>\r\n    <div *ngIf=\"isSearchable && availableOptions.length == 0\" class=\"message\">{{ noResultsMessage }}</div>\r\n</div>\r\n`\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_optionTemplateSibling': [{ type: ViewChild, args: ['optionTemplateSibling', { read: ViewContainerRef }, ] },],\n'selectedOptionChange': [{ type: Output },],\n};\n}\n\nfunction SuiSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiSelect.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiSelect.ctorParameters;\n/** @type {?} */\nSuiSelect.propDecorators;\n/** @type {?} */\nSuiSelect.prototype.selectedOption;\n/** @type {?} */\nSuiSelect.prototype._writtenOption;\n/** @type {?} */\nSuiSelect.prototype._optionTemplateSibling;\n/** @type {?} */\nSuiSelect.prototype.selectedOptionChange;\n}\n\nexport class SuiSelectValueAccessor<T, U> extends CustomValueAccessor<U, SuiSelect<T, U>> {\n/**\n * @param {?} host\n */\nconstructor (host:SuiSelect<T, U>) {\r\n        super(host);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: 'sui-select',\r\n    host: { '(selectedOptionChange)': 'onChange($event)' },\r\n    providers: [customValueAccessorFactory(SuiSelectValueAccessor)]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SuiSelect, },\n];\n}\n\nfunction SuiSelectValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiSelectValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiSelectValueAccessor.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}