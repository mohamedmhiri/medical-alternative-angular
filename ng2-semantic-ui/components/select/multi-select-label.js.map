{"version":3,"sources":["multi-select-label.ts"],"names":[],"mappings":"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","file":"multi-select-label.js","sourceRoot":"","sourcesContent":["import {Component, Input, HostBinding, HostListener, EventEmitter, ViewContainerRef, ViewChild, Renderer, ElementRef, Output, ChangeDetectorRef} from '@angular/core';\r\nimport {SuiTransition, Transition, TransitionDirection} from '../transition/transition';\r\nimport {TransitionController} from '../transition/transition-controller';\r\nimport {ISelectRenderedOption} from './select-option';\r\nimport {HandledMouseEvent} from '../util/util';\nexport class SuiMultiSelectLabel<T> extends SuiTransition implements ISelectRenderedOption<T> {\nprivate _labelClasses:boolean;\nprivate _transitionController:TransitionController;\npublic value:T;\npublic onDeselected:EventEmitter<T>;\npublic readLabel:(obj:T) => string;\npublic usesTemplate:boolean;\npublic templateSibling:ViewContainerRef;\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} changeDetector\n */\nconstructor(renderer:Renderer, element:ElementRef, changeDetector:ChangeDetectorRef) {\r\n        super(renderer, element, changeDetector);\r\n\r\n        // Initialise transition functionality.\r\n        this._transitionController = new TransitionController(false, \"inline-block\");\r\n        this.setTransitionController(this._transitionController);\r\n        \r\n        this.onDeselected = new EventEmitter<T>();\r\n        this.readLabel = (value:T) => \"\";\r\n        this.usesTemplate = false;\r\n\r\n        this._labelClasses = true;\r\n\r\n        this._transitionController.animate(new Transition(\"scale\", 100, TransitionDirection.In));\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\npublic deselectOption(e:HandledMouseEvent) {\r\n        e.eventHandled = true;\r\n\r\n        this._transitionController.animate(new Transition(\"scale\", 100, TransitionDirection.Out, () =>\r\n            this.onDeselected.emit(this.value)));\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\npublic onClick(e:HandledMouseEvent) {\r\n        e.eventHandled = true;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'sui-multi-select-label',\r\n    template: `\r\n<span #templateSibling></span>\r\n<span *ngIf=\"!usesTemplate\">{{ readLabel(value) }}</span>\r\n<i class=\"delete icon\" (click)=\"deselectOption($event)\"></i>\r\n`\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_labelClasses': [{ type: HostBinding, args: ['class.ui', ] },{ type: HostBinding, args: ['class.label', ] },],\n'value': [{ type: Input },],\n'onDeselected': [{ type: Output },],\n'templateSibling': [{ type: ViewChild, args: ['templateSibling', { read: ViewContainerRef }, ] },],\n'onClick': [{ type: HostListener, args: [\"click\", [\"$event\"], ] },],\n};\n}\n\nfunction SuiMultiSelectLabel_tsickle_Closure_declarations() {\n/** @type {?} */\nSuiMultiSelectLabel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSuiMultiSelectLabel.ctorParameters;\n/** @type {?} */\nSuiMultiSelectLabel.propDecorators;\n/** @type {?} */\nSuiMultiSelectLabel.prototype._labelClasses;\n/** @type {?} */\nSuiMultiSelectLabel.prototype._transitionController;\n/** @type {?} */\nSuiMultiSelectLabel.prototype.value;\n/** @type {?} */\nSuiMultiSelectLabel.prototype.onDeselected;\n/** @type {?} */\nSuiMultiSelectLabel.prototype.readLabel;\n/** @type {?} */\nSuiMultiSelectLabel.prototype.usesTemplate;\n/** @type {?} */\nSuiMultiSelectLabel.prototype.templateSibling;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}