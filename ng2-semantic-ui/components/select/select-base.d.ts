import { ElementRef, QueryList, AfterContentInit, Renderer, TemplateRef, ViewContainerRef } from '@angular/core';
import { DropdownService } from '../dropdown/dropdown.service';
import { SearchService, LookupFn } from '../search/search.service';
import { HandledMouseEvent, TemplateRefContext } from '../util/util';
import { SuiDropdownMenu } from '../dropdown/dropdown-menu';
import { SuiSelectOption, ISelectRenderedOption } from './select-option';
export declare abstract class SuiSelectBase<T, U> implements AfterContentInit {
    private _element;
    private _renderer;
    dropdownService: DropdownService;
    searchService: SearchService<T>;
    protected _menu: SuiDropdownMenu;
    protected _renderedOptions: QueryList<SuiSelectOption<T>>;
    private _renderedSubscriptions;
    private _selectClasses;
    readonly isActive: boolean;
    readonly isVisible: boolean;
    isSearchable: boolean;
    readonly tabIndex: number;
    isDisabled: boolean;
    private _queryInput;
    placeholder: string;
    options: T[] | LookupFn<T>;
    protected optionsUpdateHook(): void;
    readonly availableOptions: T[];
    query: string;
    protected updateQuery(query: string): void;
    protected queryUpdateHook(): void;
    labelField: string;
    private readonly labelGetter;
    valueField: string;
    protected readonly valueGetter: (obj: T) => U;
    optionTemplate: TemplateRef<TemplateRefContext<T>>;
    noResultsMessage: string;
    constructor(_element: ElementRef, _renderer: Renderer);
    ngAfterContentInit(): void;
    protected onAvailableOptionsRendered(): void;
    protected initialiseRenderedOption(option: ISelectRenderedOption<T>): void;
    selectOption(option: T): void;
    protected findOption(options: T[], value: U): T;
    onClick(e: HandledMouseEvent): void;
    onKeyPress(e: KeyboardEvent): void;
    onDocumentClick(e: MouseEvent): void;
    protected focusInput(): void;
    protected drawTemplate(siblingRef: ViewContainerRef, value: T): void;
}
