[{"__symbolic":"module","version":3,"metadata":{"SuiMultiSelect":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./select-base","name":"SuiSelectBase"},"arity":2,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sui-multi-select","template":"\n<i class=\"dropdown icon\"></i>\n<!-- Multi-select labels -->\n<sui-multi-select-label *ngFor=\"let selected of selectedOptions;\" [value]=\"selected\"></sui-multi-select-label>\n<!-- Query input -->\n<input [hidden]=\"!isSearchable\" class=\"search\" type=\"text\" autocomplete=\"off\" [(ngModel)]=\"query\" (keydown)=\"onQueryInputKeydown($event)\" #queryInput>\n<!-- Placeholder text -->\n<div class=\"default text\" [class.filtered]=\"!!query\">{{ placeholder }}</div>\n<!-- Select dropdown menu -->\n<div class=\"menu\" suiDropdownMenu [menuAutoSelectFirst]=\"true\">\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"availableOptions.length == 0 \">\n        <div *ngIf=\"!maxSelectedReached\" class=\"message\">{{ noResultsMessage }}</div>\n        <div *ngIf=\"maxSelectedReached\" class=\"message\">Max {{ maxSelected }} selections</div>\n    </ng-container>\n</div>\n","styles":["\n:host input.search {\n    width: 12em !important;\n}\n    "]}]}],"members":{"_renderedSelectedOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren"},"arguments":[{"__symbolic":"reference","module":"./multi-select-label","name":"SuiMultiSelectLabel"}]}]}],"selectedOptionsChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"optionsUpdateHook":[{"__symbolic":"method"}],"maxSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"_multiSelectClasses":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding"},"arguments":["class.multiple"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer"}]}],"selectOption":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"deselectOption":[{"__symbolic":"method"}],"onQueryInputKeydown":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onSelectedOptionsRendered":[{"__symbolic":"method"}]}},"SuiMultiSelectValueAccessor":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../util/custom-value-accessor","name":"CustomValueAccessor"},"arity":2,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive"},"arguments":[{"selector":"sui-multi-select","host":{"(selectedOptionsChange)":"onChange($event)","$quoted$":["(selectedOptionsChange)"]},"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"../util/custom-value-accessor","name":"customValueAccessorFactory"},"arguments":[{"__symbolic":"reference","name":"SuiMultiSelectValueAccessor"}]}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SuiMultiSelect","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":172,"character":36,"context":{"typeName":"T"}},{"__symbolic":"error","message":"Could not resolve type","line":172,"character":39,"context":{"typeName":"U"}}]}]}]}}}},{"__symbolic":"module","version":1,"metadata":{"SuiMultiSelect":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./select-base","name":"SuiSelectBase"},"arity":2,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sui-multi-select","template":"\n<i class=\"dropdown icon\"></i>\n<!-- Multi-select labels -->\n<sui-multi-select-label *ngFor=\"let selected of selectedOptions;\" [value]=\"selected\"></sui-multi-select-label>\n<!-- Query input -->\n<input [hidden]=\"!isSearchable\" class=\"search\" type=\"text\" autocomplete=\"off\" [(ngModel)]=\"query\" (keydown)=\"onQueryInputKeydown($event)\" #queryInput>\n<!-- Placeholder text -->\n<div class=\"default text\" [class.filtered]=\"!!query\">{{ placeholder }}</div>\n<!-- Select dropdown menu -->\n<div class=\"menu\" suiDropdownMenu [menuAutoSelectFirst]=\"true\">\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"availableOptions.length == 0 \">\n        <div *ngIf=\"!maxSelectedReached\" class=\"message\">{{ noResultsMessage }}</div>\n        <div *ngIf=\"maxSelectedReached\" class=\"message\">Max {{ maxSelected }} selections</div>\n    </ng-container>\n</div>\n","styles":["\n:host input.search {\n    width: 12em !important;\n}\n    "]}]}],"members":{"_renderedSelectedOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren"},"arguments":[{"__symbolic":"reference","module":"./multi-select-label","name":"SuiMultiSelectLabel"}]}]}],"selectedOptionsChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"optionsUpdateHook":[{"__symbolic":"method"}],"maxSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"_multiSelectClasses":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding"},"arguments":["class.multiple"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer"}]}],"selectOption":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"deselectOption":[{"__symbolic":"method"}],"onQueryInputKeydown":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onSelectedOptionsRendered":[{"__symbolic":"method"}]}},"SuiMultiSelectValueAccessor":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../util/custom-value-accessor","name":"CustomValueAccessor"},"arity":2,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive"},"arguments":[{"selector":"sui-multi-select","host":{"(selectedOptionsChange)":"onChange($event)"},"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"../util/custom-value-accessor","name":"customValueAccessorFactory"},"arguments":[{"__symbolic":"reference","name":"SuiMultiSelectValueAccessor"}]}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SuiMultiSelect","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":172,"character":36,"context":{"typeName":"T"}},{"__symbolic":"error","message":"Could not resolve type","line":172,"character":39,"context":{"typeName":"U"}}]}]}]}}}}]